---
import Layout from '../../layouts/Layout.astro';
import Navigation from '../../components/Navigation.astro';
import { getCollection } from 'astro:content';

const blogPosts = await getCollection('blog', ({ data }) => {
    return data.draft !== true;
});

// Sort posts by publication date (newest first)
const sortedPosts = blogPosts.sort(
    (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

function formatDate(date: Date) {
    return date.toLocaleDateString('en-US', {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
    });
}
---

<Layout title="Blog - Your Name" enableFadeIn={true}>
    <Navigation />
    
    <main>
        <div class="container">
            <header class="blog-header fade-in-enabled">
                <h1>Blog</h1>
                <p>Thoughts on physics, engineering, research, and the intersection of science and technology.</p>
            </header>

            <section class="blog-posts fade-in-enabled delayed">
                {sortedPosts.length === 0 ? (
                    <div class="no-posts">
                        <p>No blog posts yet. Check back soon!</p>
                    </div>
                ) : (
                    <div class="posts-grid">
                        {sortedPosts.map((post, index) => (
                            <article class={`post-card fade-in-enabled delayed-${index > 2 ? '3' : index + 1}`}>
                                <a href={`/blog/${post.slug}`} class="post-link">
                                    {post.data.heroImage && (
                                        <img src={post.data.heroImage} alt={post.data.title} class="post-image" />
                                    )}
                                    <div class="post-content">
                                        <div class="post-meta">
                                            <time datetime={post.data.pubDate.toISOString()}>
                                                {formatDate(post.data.pubDate)}
                                            </time>
                                            {post.data.tags.length > 0 && (
                                                <div class="post-tags">
                                                    {post.data.tags.map((tag) => (
                                                        <span class="tag">{tag}</span>
                                                    ))}
                                                </div>
                                            )}
                                        </div>
                                        <h2>{post.data.title}</h2>
                                        <p class="post-description">{post.data.description}</p>
                                        <div class="read-more">
                                            Read more â†’
                                        </div>
                                    </div>
                                </a>
                            </article>
                        ))}
                    </div>
                )}
            </section>
        </div>
    </main>
</Layout>

<style>
    main {
        margin-top: 80px;
        padding: 2rem 0;
    }

    .blog-header {
        text-align: center;
        margin-bottom: 4rem;
    }

    .blog-header h1 {
        font-size: 3rem;
        color: var(--base04);
        margin-bottom: 1rem;
    }

    .blog-header p {
        font-size: 1.2rem;
        color: var(--base05);
        max-width: 600px;
        margin: 0 auto;
        line-height: 1.6;
    }

    .no-posts {
        text-align: center;
        padding: 4rem 2rem;
        color: var(--base05);
        font-size: 1.1rem;
    }

    .posts-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
        gap: 2rem;
    }

    .post-card {
        background-color: var(--base01);
        border-radius: 12px;
        overflow: hidden;
        border: 1px solid var(--base02);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .post-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    }

    .post-link {
        text-decoration: none;
        color: inherit;
        display: block;
        height: 100%;
    }

    .post-image {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .post-content {
        padding: 1.5rem;
    }

    .post-meta {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 1rem;
        flex-wrap: wrap;
        gap: 0.5rem;
    }

    .post-meta time {
        color: var(--base03);
        font-size: 0.9rem;
    }

    .post-tags {
        display: flex;
        flex-wrap: wrap;
        gap: 0.3rem;
    }

    .tag {
        background-color: var(--base02);
        color: var(--base05);
        padding: 0.2rem 0.6rem;
        border-radius: 15px;
        font-size: 0.7rem;
        font-weight: 500;
    }

    .post-card h2 {
        color: var(--base04);
        font-size: 1.4rem;
        margin-bottom: 0.8rem;
        line-height: 1.3;
    }

    .post-description {
        color: var(--base05);
        line-height: 1.6;
        margin-bottom: 1rem;
    }

    .read-more {
        color: var(--base0D);
        font-weight: 500;
        font-size: 0.9rem;
    }

    @media (max-width: 768px) {
        .blog-header h1 {
            font-size: 2.5rem;
        }
        
        .posts-grid {
            grid-template-columns: 1fr;
        }
        
        .post-meta {
            flex-direction: column;
            align-items: flex-start;
        }
    }
</style>
